/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template files, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.DataGenerator;
import Business.EcoSystem;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JPanel;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.chart.plot.PiePlot3D;

/**
 *
 * @author bhagyatrivedi
 */
public class ReportsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ReportsJPanel
     */
    JPanel workArea;
    EcoSystem business;
    String[] value;
    String geVa;
    List<String> nL;
    List<String> dL;
    List<String> mL;
    List<String> gL;
    public ReportsJPanel(JPanel workArea,EcoSystem business) {
        initComponents();
        this.workArea=workArea;
        this.business=business;
         this.nL= new ArrayList<>();
         this.dL= new ArrayList<>();
         this.mL= new ArrayList<>();
         this.gL = new ArrayList<>();
         addMedicines();
         addDrugs();
    }
    
    public void addDrugs(){
         try {
            String filePath = "./drug data.txt";
            File files = new File(filePath);
            Scanner input = new Scanner(files);
            
            while(input.hasNext()){
                String dt = input.next();
                geVa = dt;
                 gL.add(geVa);
                 System.out.println(geVa);
                }
             
        } catch (FileNotFoundException ex) {
            
        }
       
    }
    
    public void addMedicines(){
        try {
            String filePath = "./prescription data.txt";
            File file = new File(filePath);
            Scanner inputs = new Scanner(file);
            
            while(inputs.hasNext()){
                String data = inputs.next();
                 value = data.split(",");
                 nL.add(value[0].trim());
                 dL.add(value[1].trim());
                 mL.add(value[2].trim());
                 System.out.println(value[2]);
                }
           
        } catch (Exception ex) {
            
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnR1 = new javax.swing.JButton();
        btnR2 = new javax.swing.JButton();
        btnR3 = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 204, 204));
        setPreferredSize(new java.awt.Dimension(2000, 1200));

        btnR1.setBackground(new java.awt.Color(255, 255, 153));
        btnR1.setFont(new java.awt.Font("Microsoft JhengHei UI", 1, 18)); // NOI18N
        btnR1.setText("TOP DRUG MEDICINE SALES ACROSS NETWORKS");
        btnR1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnR1ActionPerformed(evt);
            }
        });

        btnR2.setBackground(new java.awt.Color(255, 255, 153));
        btnR2.setFont(new java.awt.Font("Microsoft JhengHei UI", 1, 18)); // NOI18N
        btnR2.setText("COMMON DISEASES OFF DRUG USAGES");
        btnR2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnR2ActionPerformed(evt);
            }
        });

        btnR3.setBackground(new java.awt.Color(255, 255, 153));
        btnR3.setFont(new java.awt.Font("Microsoft JhengHei UI", 1, 18)); // NOI18N
        btnR3.setText("MOST DRUGS INFESTATION");
        btnR3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnR3ActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(255, 255, 153));
        btnBack.setFont(new java.awt.Font("Microsoft JhengHei UI", 1, 18)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(581, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnR3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnR2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnR1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBack, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(948, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(btnR1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87)
                .addComponent(btnR2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77)
                .addComponent(btnR3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(103, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnR1ActionPerformed

         DefaultCategoryDataset graph1= new DefaultCategoryDataset();
        int atorvastatin=10,levothyroxine=10,lisinopril=23,metformin=234,metoprolol=32,amlodipine=11,albuterol=21,omeprazole=234;
        int atorvastatin1=20,levothyroxine1=30,lisinopril1=4,metformin1=23,metoprolol1=453,amlodipine1=134,albuterol1=32,omeprazole1=234;
        int atorvastatin2=10,levothyroxine2=32,lisinopril2=56,metformin2=324,metoprolol2=22,amlodipine2=23,albuterol2=34,omeprazole2=211;
         
         for(int i=0;i<mL.size();i++){
           String network = nL.get(i);
           String disease = dL.get(i);
           String medicine = mL.get(i);
           
           if((network.equalsIgnoreCase("Roxbury")) && medicine.equalsIgnoreCase("atorvastatin")){
              atorvastatin++;
             }
           if((network.equalsIgnoreCase("Roxbury")) && medicine.equalsIgnoreCase("levothyroxine")){
              levothyroxine++;
             }
           if((network.equalsIgnoreCase("Roxbury")) && medicine.equalsIgnoreCase("lisinopril")){
              lisinopril++;
             }
           if((network.equalsIgnoreCase("Roxbury")) && medicine.equalsIgnoreCase("metformin")){
              metformin++;
             }
           if((network.equalsIgnoreCase("Roxbury")) && medicine.equalsIgnoreCase("metoprolol")){
              metoprolol++;
             }
           if((network.equalsIgnoreCase("Roxbury")) && medicine.equalsIgnoreCase("amlodipine")){
              amlodipine++;
             }
           if((network.equalsIgnoreCase("Roxbury")) && medicine.equalsIgnoreCase("albuterol")){
              albuterol++;
             }
           if((network.equalsIgnoreCase("Roxbury")) && medicine.equalsIgnoreCase("omeprazole")){
              omeprazole++;
             }
           
            }
         graph1.setValue(atorvastatin, "Roxbury", "atorvastatin");
         graph1.setValue(levothyroxine, "Roxbury", "levothyroxine");
         graph1.setValue(lisinopril, "Roxbury", "lisinopril");
         graph1.setValue(metformin, "Roxbury", "metformin");
         graph1.setValue(metoprolol, "Roxbury", "metoprolol");
         graph1.setValue(amlodipine, "Roxbury", "amlodipine");
         graph1.setValue(albuterol, "Roxbury", "albuterol");
         graph1.setValue(omeprazole, "Roxbury", "omeprazole");
         
       JFreeChart jchart = ChartFactory.createBarChart("Top Medicines By Sales", "Networks", "Sales", graph1, PlotOrientation.VERTICAL, true, true, false);
       
       CategoryPlot plot = jchart.getCategoryPlot();
       plot.setRangeGridlinePaint(Color.BLACK);
       
       
       ChartFrame chartFrame = new ChartFrame("Medicines",jchart,true);
       chartFrame.setVisible(true);
       chartFrame.setSize(2000,1000); 
       
       
       for(int i=0;i<mL.size();i++){
           String network = nL.get(i);
           String disease = dL.get(i);
           String medicine = mL.get(i);
           
           if((network.equalsIgnoreCase("Mass Avenue")) && medicine.equalsIgnoreCase("atorvastatin")){
              atorvastatin1++;
             }
           if((network.equalsIgnoreCase("Mass Avenue")) && medicine.equalsIgnoreCase("levothyroxine")){
              levothyroxine1++;
             }
           if((network.equalsIgnoreCase("Mass Avenue")) && medicine.equalsIgnoreCase("lisinopril")){
              lisinopril1++;
             }
           if((network.equalsIgnoreCase("Mass Avenue")) && medicine.equalsIgnoreCase("metformin")){
              metformin1++;
             }
           if((network.equalsIgnoreCase("Mass Avenue")) && medicine.equalsIgnoreCase("metoprolol")){
              metoprolol1++;
             }
           if((network.equalsIgnoreCase("Mass Avenue")) && medicine.equalsIgnoreCase("amlodipine")){
              amlodipine1++;
             }
           if((network.equalsIgnoreCase("Mass Avenue")) && medicine.equalsIgnoreCase("albuterol")){
              albuterol1++;
             }
           if((network.equalsIgnoreCase("Mass Avenue")) && medicine.equalsIgnoreCase("omeprazole")){
              omeprazole1++;
             }
           
            }
         graph1.setValue(atorvastatin1, "Mass Avenue", "atorvastatin");
         graph1.setValue(levothyroxine1, "Mass Avenue", "levothyroxine");
         graph1.setValue(lisinopril1, "Mass Avenue", "lisinopril");
         graph1.setValue(metformin1, "Mass Avenue", "metformin");
         graph1.setValue(metoprolol1, "Mass Avenue", "metoprolol");
         graph1.setValue(amlodipine1, "Mass Avenue", "amlodipine");
         graph1.setValue(albuterol1, "Mass Avenue", "albuterol");
         graph1.setValue(omeprazole1, "Mass Avenue", "omeprazole");
         
        CategoryPlot plot1 = jchart.getCategoryPlot();
        plot1.setRangeGridlinePaint(Color.BLACK);
        
        for(int i=0;i<mL.size();i++){
           String network = nL.get(i);
           String disease = dL.get(i);
           String medicine = mL.get(i);
           
           if((network.equalsIgnoreCase("Dorchester")) && medicine.equalsIgnoreCase("atorvastatin")){
              atorvastatin2++;
             }
           if((network.equalsIgnoreCase("Dorchester")) && medicine.equalsIgnoreCase("levothyroxine")){
              levothyroxine2++;
             }
           if((network.equalsIgnoreCase("Dorchester")) && medicine.equalsIgnoreCase("lisinopril")){
              lisinopril2++;
             }
           if((network.equalsIgnoreCase("Dorchester")) && medicine.equalsIgnoreCase("metformin")){
              metformin2++;
             }
           if((network.equalsIgnoreCase("Dorchester")) && medicine.equalsIgnoreCase("metoprolol")){
              metoprolol2++;
             }
           if((network.equalsIgnoreCase("Dorchester")) && medicine.equalsIgnoreCase("amlodipine")){
              amlodipine2++;
             }
           if((network.equalsIgnoreCase("Dorchester")) && medicine.equalsIgnoreCase("albuterol")){
              albuterol2++;
             }
           if((network.equalsIgnoreCase("Dorchester")) && medicine.equalsIgnoreCase("omeprazole")){
              omeprazole2++;
             }
           
            }
         graph1.setValue(atorvastatin2, "Dorchester", "atorvastatin");
         graph1.setValue(levothyroxine2, "Dorchester", "levothyroxine");
         graph1.setValue(lisinopril2, "Dorchester", "lisinopril");
         graph1.setValue(metformin2, "Dorchester", "metformin");
         graph1.setValue(metoprolol2, "Dorchester", "metoprolol");
         graph1.setValue(amlodipine2, "Dorchester", "amlodipine");
         graph1.setValue(albuterol2, "Dorchester", "albuterol");
         graph1.setValue(omeprazole2, "Dorchester", "omeprazole");
         
        CategoryPlot plot2 = jchart.getCategoryPlot();
        plot2.setRangeGridlinePaint(Color.BLACK);
    }//GEN-LAST:event_btnR1ActionPerformed

    private void btnR2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnR2ActionPerformed
        
         DefaultCategoryDataset graph2= new DefaultCategoryDataset();
//    private static String[] diseaseName = {"disease-cannbis","disease-fentanyl","disease-MDMA","disease-steroids","disease-cocaine","disease-heroine","disease-hallucinogens","disease-LSD","disease-benzos","disease-alcohol"};

       int diseaseCannbis=34,diseaseFentanyl=22,diseaseMDMA=23,diseaseSteroids=30,diseaseCocaine=50,diseaseHeroine=780,diseaseHallucinogens=35,diseaseLSD=20;
       int diseaseCannbis1=234,diseaseFentanyl1=45,diseaseMDMA1=42,diseaseSteroids1=20,diseaseCocaine1=30,diseaseHeroine1=300,diseaseHallucinogens1=27,diseaseLSD1=20;
       int diseaseCannbis2=55,diseaseFentanyl2=23,diseaseMDMA2=10,diseaseSteroids2=10,diseaseCocaine2=50,diseaseHeroine2=235,diseaseHallucinogens2=82,diseaseLSD2=11;
       
         for(int i=0;i<mL.size();i++){
           String network = nL.get(i);
           String disease = dL.get(i);
           String medicine = mL.get(i);
           
            if((network.equalsIgnoreCase("Roxbury")) && disease.equalsIgnoreCase("diseaseCannbis")){
              diseaseCannbis++;
             }
           if((network.equalsIgnoreCase("Roxbury")) && disease.equalsIgnoreCase("diseaseFentanyl")){
              diseaseFentanyl++;
             }
           if((network.equalsIgnoreCase("Roxbury")) && disease.equalsIgnoreCase("diseaseMDMA")){
              diseaseMDMA++;
             }
           if((network.equalsIgnoreCase("Roxbury")) && disease.equalsIgnoreCase("diseaseSteroids")){
              diseaseSteroids++;
             }
           if((network.equalsIgnoreCase("Roxbury")) && disease.equalsIgnoreCase("diseaseCocaine")){
              diseaseCocaine++;
             }
           if((network.equalsIgnoreCase("Roxbury")) && disease.equalsIgnoreCase("diseaseHeroine")){
              diseaseHeroine++;
             }
           if((network.equalsIgnoreCase("Roxbury")) && disease.equalsIgnoreCase("diseaseHallucinogens")){
              diseaseHallucinogens++;
             }
           if((network.equalsIgnoreCase("Roxbury")) && disease.equalsIgnoreCase("diseaseLSD")){
              diseaseLSD++;
             }
           
            }
         graph2.setValue(diseaseCannbis, "Roxbury", "diseaseCannbis");
         graph2.setValue(diseaseFentanyl, "Roxbury", "diseaseFentanyl");
         graph2.setValue(diseaseMDMA, "Roxbury", "diseaseMDMA");
         graph2.setValue(diseaseSteroids, "Roxbury", "diseaseSteroids");
         graph2.setValue(diseaseCocaine, "Roxbury", "diseaseCocaine");
         graph2.setValue(diseaseHeroine, "Roxbury", "diseaseHeroine");
         graph2.setValue(diseaseHallucinogens, "Roxbury", "diseaseHallucinogens");
         graph2.setValue(diseaseLSD, "Roxbury", "diseaseLSD");
         
         
       JFreeChart jchart = ChartFactory.createBarChart("Most common diseases", "Networks", "count", graph2, PlotOrientation.VERTICAL, true, true, false);
       
       CategoryPlot plot = jchart.getCategoryPlot();
       plot.setRangeGridlinePaint(Color.BLACK);
       
       
       ChartFrame chartFrame = new ChartFrame("Medicines",jchart,true);
       chartFrame.setVisible(true);
       chartFrame.setSize(2000,1000); 
       
       
       for(int i=0;i<mL.size();i++){
           String network = nL.get(i);
           String disease = dL.get(i);
           String medicine = mL.get(i);
           
            if((network.equalsIgnoreCase("Mass Avenue")) && disease.equalsIgnoreCase("diseaseCannbis")){
              diseaseCannbis1++;
             }
           if((network.equalsIgnoreCase("Mass Avenue")) && disease.equalsIgnoreCase("diseaseFentanyl")){
              diseaseFentanyl1++;
             }
           if((network.equalsIgnoreCase("Mass Avenue")) && disease.equalsIgnoreCase("diseaseMDMA")){
              diseaseMDMA1++;
             }
           if((network.equalsIgnoreCase("Mass Avenue")) && disease.equalsIgnoreCase("diseaseSteroids")){
              diseaseSteroids1++;
             }
           if((network.equalsIgnoreCase("Mass Avenue")) && disease.equalsIgnoreCase("diseaseCocaine")){
              diseaseCocaine1++;
             }
           if((network.equalsIgnoreCase("Mass Avenue")) && disease.equalsIgnoreCase("diseaseHeroine")){
              diseaseHeroine1++;
             }
           if((network.equalsIgnoreCase("Mass Avenue")) && disease.equalsIgnoreCase("diseaseHallucinogens")){
              diseaseHallucinogens1++;
             }
           if((network.equalsIgnoreCase("Mass Avenue")) && disease.equalsIgnoreCase("diseaseLSD")){
              diseaseLSD1++;
             }
           
            }
         graph2.setValue(diseaseCannbis1, "Mass Avenue", "diseaseCannbis");
         graph2.setValue(diseaseFentanyl1, "Mass Avenue", "diseaseFentanyl");
         graph2.setValue(diseaseMDMA1, "Mass Avenue", "diseaseMDMA");
         graph2.setValue(diseaseSteroids1, "Mass Avenue", "diseaseSteroids");
         graph2.setValue(diseaseCocaine1, "Mass Avenue", "diseaseCocaine");
         graph2.setValue(diseaseHeroine1, "Mass Avenue", "diseaseHeroine");
         graph2.setValue(diseaseHallucinogens1, "Mass Avenue", "diseaseHallucinogens");
         graph2.setValue(diseaseLSD1, "Mass Avenue", "diseaseLSD");
         
        CategoryPlot plot1 = jchart.getCategoryPlot();
        plot1.setRangeGridlinePaint(Color.BLACK);
        
        for(int i=0;i<mL.size();i++){
           String network = nL.get(i);
           String disease = dL.get(i);
           String medicine = mL.get(i);
           
            if((network.equalsIgnoreCase("Dorechester")) && disease.equalsIgnoreCase("diseaseCannbis")){
              diseaseCannbis2++;
             }
           if((network.equalsIgnoreCase("Dorechester")) && disease.equalsIgnoreCase("diseaseFentanyl")){
              diseaseFentanyl2++;
             }
           if((network.equalsIgnoreCase("Dorechester")) && disease.equalsIgnoreCase("diseaseMDMA")){
              diseaseMDMA2++;
             }
           if((network.equalsIgnoreCase("Dorechester")) && disease.equalsIgnoreCase("diseaseSteroids")){
              diseaseSteroids2++;
             }
           if((network.equalsIgnoreCase("Dorechester")) && disease.equalsIgnoreCase("diseaseCocaine")){
              diseaseCocaine2++;
             }
           if((network.equalsIgnoreCase("Dorechester")) && disease.equalsIgnoreCase("diseaseHeroine")){
              diseaseHeroine2++;
             }
           if((network.equalsIgnoreCase("Dorechester")) && disease.equalsIgnoreCase("diseaseHallucinogens")){
              diseaseHallucinogens2++;
             }
           if((network.equalsIgnoreCase("Dorechester")) && disease.equalsIgnoreCase("diseaseLSD")){
              diseaseLSD2++;
             }
           
            }
         graph2.setValue(diseaseCannbis2, "Dorechester", "diseaseCannbis");
         graph2.setValue(diseaseFentanyl2, "Dorechester", "diseaseFentanyl");
         graph2.setValue(diseaseMDMA2, "Dorechester", "diseaseMDMA");
         graph2.setValue(diseaseSteroids2, "Dorechester", "diseaseSteroids");
         graph2.setValue(diseaseCocaine2, "Dorechester", "diseaseCocaine");
         graph2.setValue(diseaseHeroine2, "Dorechester", "diseaseHeroine");
         graph2.setValue(diseaseHallucinogens2, "Dorechester", "diseaseHallucinogens");
         graph2.setValue(diseaseLSD2, "Dorechester", "diseaseLSD");
         
        CategoryPlot plot2 = jchart.getCategoryPlot();
        plot2.setRangeGridlinePaint(Color.BLACK);
    }//GEN-LAST:event_btnR2ActionPerformed

    private void btnR3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnR3ActionPerformed
        
         DefaultPieDataset piechart = new DefaultPieDataset();
         int Cannabis=35,Fentanyl=332,MDMA=44,Steroids=110,Cocaine=340,Heroine=574,Hallucinogens=375,LSD=382,Benzos=325,Alcohol=235;
//       private static String[] drugCompounds = {"Cannabis","Fentanyl","MDMA","Steroids","Cocaine","Heroine","Hallucinogens","LSD","Benzos","Alcohol"};

        for(int i=0;i<gL.size();i++){
           String gene = gL.get(i);
           
           if(gene.equalsIgnoreCase("Cannabis")){
              Cannabis++;
             }
           if(gene.equalsIgnoreCase("Fentanyl")){
              Fentanyl++;
             }
           if(gene.equalsIgnoreCase("MDMA")){
              MDMA++;
             }
           if(gene.equalsIgnoreCase("Steroids")){
              Steroids++;
             }
           if(gene.equalsIgnoreCase("Cocaine")){
              Cocaine++;
             }
           if(gene.equalsIgnoreCase("Heroine")){
              Heroine++;
             }
           if(gene.equalsIgnoreCase("Hallucinogens")){
              Hallucinogens++;
             }
           if(gene.equalsIgnoreCase("LSD")){
              LSD++;
             }
           if(gene.equalsIgnoreCase("Benzos")){
              Benzos++;
             }
           if(gene.equalsIgnoreCase("Alcohol")){
              Alcohol++;
             }
           }
        piechart.setValue("Cannabis", Cannabis);
        piechart.setValue("Fentanyl", Fentanyl);
        piechart.setValue("MDMA", MDMA);
        piechart.setValue("Steroids", Steroids);
        piechart.setValue("Cocaine", Cocaine);
        piechart.setValue("Heroine", Heroine);
        piechart.setValue("Hallucinogens", Hallucinogens);
        piechart.setValue("LSD", LSD);
        piechart.setValue("Benzos", Benzos);
        piechart.setValue("Alcohol", Alcohol);
        
        JFreeChart chart = ChartFactory.createPieChart3D("Predominent Drugs in Diseases", piechart, true, true,true);
        PiePlot3D plot = (PiePlot3D)chart.getPlot();
        
        ChartFrame panel = new ChartFrame("Pie Chart",chart);
        panel.setVisible(true);
        panel.setSize(2000,1000);
    }//GEN-LAST:event_btnR3ActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        workArea.remove(this);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.previous(workArea);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnR1;
    private javax.swing.JButton btnR2;
    private javax.swing.JButton btnR3;
    // End of variables declaration//GEN-END:variables
}
