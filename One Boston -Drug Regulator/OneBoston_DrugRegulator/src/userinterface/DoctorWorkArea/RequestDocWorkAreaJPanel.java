/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DoctorWorkArea;

import Business.Doctor.Patient;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.DoctorOrganization;
import Business.Organization.LabOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nisha
 */
public class RequestDocWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RequestDocWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount acc;
    private DoctorOrganization org;
    private Enterprise ep;

    private Network network;
    private EcoSystem system;
    private Enterprise.EnterpriseType epType;
    private static final String CLASS_NAME = RequestDocWorkAreaJPanel.class.getName();

    public RequestDocWorkAreaJPanel(JPanel userProcessContainer, UserAccount acc, DoctorOrganization docOrg, Enterprise enterprise, EcoSystem system, Network network){
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.acc = acc;
        this.org = docOrg;
        this.ep = enterprise;
        this.network = network;
        this.system = system;
        valueLbl.setText(enterprise.getName());
        tblPopulateRequest();

    }

    public void tblPopulateRequest() {
        DefaultTableModel dtm = (DefaultTableModel) tblDocRequest.getModel();

        dtm.setRowCount(0);
        ArrayList<WorkRequest> workRequestList = acc.getWorkQueue().getWorkRequestList();
        for (WorkRequest req : workRequestList) {
            if (req instanceof LabTestWorkRequest) {
                Object[] obj = new Object[8];
                obj[0] = ((LabTestWorkRequest) req);
                obj[1] = ((LabTestWorkRequest) req).getPatient().getAge();
                obj[2] = ((LabTestWorkRequest) req).getPatient().getSex();
                obj[3] = req.getMessage();

                obj[4] = req.getReceiver();
                obj[5] = req.getStatus();
                
                LabTestWorkRequest labTest = (LabTestWorkRequest) req;
                String result = (labTest).getPatient().getDrugNewCompound();
                
                if(req.getReceiver()==null||req.getReceiver().equals("Processing"))
                {
                     obj[6]=null;
                }else
                {
                obj[6] = result == null ? "N/A(Drug Exists)" : result;
                }
                obj[7] = ((LabTestWorkRequest) req).getPatient().getClinicalProgressBar();

                dtm.addRow(obj);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblResults = new javax.swing.JLabel();
        enterpriseLbl = new javax.swing.JLabel();
        valueLbl = new javax.swing.JLabel();
        refreshbtn = new javax.swing.JButton();
        btnRequestTest = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDocRequest = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();
        txtNameField = new javax.swing.JTextField();
        lblGen = new javax.swing.JLabel();
        txtTestReq = new javax.swing.JTextField();
        lblTest = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        txtAgeField = new javax.swing.JTextField();
        btnViewResults = new javax.swing.JButton();
        btnclincalTrail = new javax.swing.JButton();
        GenderComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 204, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblResults.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        lblResults.setText("Lab Results ");
        add(lblResults, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 410, 150, 50));

        enterpriseLbl.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        enterpriseLbl.setText("EnterPrise :");
        add(enterpriseLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 150, 40));

        valueLbl.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        valueLbl.setText("<value>");
        add(valueLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 20, 130, 40));

        refreshbtn.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        refreshbtn.setText("Refresh");
        refreshbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshbtnActionPerformed(evt);
            }
        });
        add(refreshbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 410, 120, 40));

        btnRequestTest.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        btnRequestTest.setText("Request Test");
        btnRequestTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestTestActionPerformed(evt);
            }
        });
        add(btnRequestTest, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 410, -1, 40));

        tblDocRequest.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 0, 20)); // NOI18N
        tblDocRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Age", "Sex", "Message", "Receiver", "Status", "New Drug", "Clinical Trail"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDocRequest.setRowHeight(25);
        jScrollPane1.setViewportView(tblDocRequest);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 490, 970, 170));

        backJButton.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        backJButton.setText("BACK");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 700, -1, -1));

        lblName.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        lblName.setText("Name:");
        add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 160, -1, -1));
        add(txtNameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 170, 287, -1));

        lblGen.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        lblGen.setText("Gender:");
        add(lblGen, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 250, -1, -1));

        txtTestReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTestReqActionPerformed(evt);
            }
        });
        add(txtTestReq, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 300, 287, 60));

        lblTest.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        lblTest.setText("Required Test:");
        add(lblTest, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 320, -1, -1));

        lblAge.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        lblAge.setText("Age:");
        add(lblAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 200, -1, -1));
        add(txtAgeField, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 210, 287, -1));

        btnViewResults.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        btnViewResults.setText("View Results");
        btnViewResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewResultsActionPerformed(evt);
            }
        });
        add(btnViewResults, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 700, -1, -1));

        btnclincalTrail.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        btnclincalTrail.setText("Clincal Trail");
        btnclincalTrail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclincalTrailActionPerformed(evt);
            }
        });
        add(btnclincalTrail, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 700, 190, 40));

        GenderComboBox.setBackground(new java.awt.Color(255, 255, 153));
        GenderComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        GenderComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Please select--", "Male", "Female" }));
        GenderComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenderComboBoxActionPerformed(evt);
            }
        });
        add(GenderComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 250, 287, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Doctorlab.jpg"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 20, -1, 300));
    }// </editor-fold>//GEN-END:initComponents

    private void refreshbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshbtnActionPerformed

        tblPopulateRequest();

    }//GEN-LAST:event_refreshbtnActionPerformed

    private void btnRequestTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestTestActionPerformed

        
        String msg = txtTestReq.getText().trim();
        String patientName = txtNameField.getText();
        String gender = GenderComboBox.getSelectedItem().toString();
        if(GenderComboBox.getSelectedIndex()<=0)
        {
            JOptionPane.showMessageDialog(null, "Please select the gender");
            return;
        }
        if(msg.equals(""))
        {
             JOptionPane.showMessageDialog(null, "Mention the test that needs to be performed");
             return;
        }
        int age ;
         try {
             age=Integer.parseInt(txtAgeField.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Age must be integer!");
            return;
        }
       
        

        LabTestWorkRequest req = new LabTestWorkRequest();
        req.setMessage(msg);
        req.setSender(acc);
        req.setStatus("Sent");
        req.setPatientName(patientName);
        Patient patient = new Patient();
        patient.setPatientName(patientName);
        patient.setAge(age);
        patient.setExaminationOfPatient(msg);
        patient.setSex(gender);
        req.setPatient(patient);

        Organization org = null;
        for (Organization organization : ep.getOrganizationDirectory().getOrganizationList()) {
            if (organization instanceof LabOrganization) {
                org = organization;
                break;
            }
        }
        if (org != null) {
            org.getWorkQueue().getWorkRequestList().add(req);
            acc.getWorkQueue().getWorkRequestList().add(req);
        }
        tblPopulateRequest();
        JOptionPane.showMessageDialog(null, "Test requested successfully");
        txtNameField.setText("");
        txtAgeField.setText("");
        GenderComboBox.setSelectedIndex(0);
        txtTestReq.setText("");
        

    }//GEN-LAST:event_btnRequestTestActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        Component[] cArray = userProcessContainer.getComponents();
        Component c = cArray[cArray.length - 1];
        DoctorWorkAreaJPanel dwjp = (DoctorWorkAreaJPanel) c;
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_backJButtonActionPerformed

    private void btnViewResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewResultsActionPerformed
        int selectedRow = tblDocRequest.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null,"please select a row to view results");
            return;
        }     
        LabTestWorkRequest labTestReq = (LabTestWorkRequest) tblDocRequest.getValueAt(selectedRow, 0);
        LabTestWorkRequest labRequest = labTestReq;
//        System.out.println(tblDocRequest.getValueAt(selectedRow, 5));
//        System.out.println(!(tblDocRequest.getValueAt(selectedRow, 5).toString().toLowerCase().equalsIgnoreCase("completed")));
        
          if(tblDocRequest.getValueAt(selectedRow, 6)==null)
        {
            JOptionPane.showMessageDialog(null, "Results to be generated by lab assistant");
            return;
        }
         int check=0;
         if((tblDocRequest.getValueAt(selectedRow, 5).toString().equalsIgnoreCase("completed"))){
            
            check++;
            
        }
         if((tblDocRequest.getValueAt(selectedRow, 5).toString().equalsIgnoreCase("ClinicalTrail"))){            
            check++;
            
        }
         System.out.println(check+"clinical");
         if(check==0)
         {
             JOptionPane.showMessageDialog(this, "Lab results are not yet returned");
             return;
         }
        
         LabDocExaminationWorkAreaJPanel labExamination = new LabDocExaminationWorkAreaJPanel(userProcessContainer, labRequest);
        userProcessContainer.add("LabDocExaminationWorkAreaJPanel", labExamination);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnViewResultsActionPerformed

    private void btnclincalTrailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclincalTrailActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblDocRequest.getSelectedRow();

        if (selectedRow < 0) {
             JOptionPane.showMessageDialog(null,"please select a row for clinical trail");
            return;
        }
       

        LabTestWorkRequest requestTest = (LabTestWorkRequest) tblDocRequest.getValueAt(selectedRow, 0);
         if(tblDocRequest.getValueAt(selectedRow, 6)==null || tblDocRequest.getValueAt(selectedRow, 6) == "N/A(Drug Exists)")
        {
            JOptionPane.showMessageDialog(null, "Clinical trail cannot be performed on this patient");
            return;
        }
        
         
        
        if(tblDocRequest.getValueAt(selectedRow, 7)!=null)
        {
            JOptionPane.showMessageDialog(null, "Clinical trail was already performed on this patient");
            return;
        }
        
         int flag=0;
         if((tblDocRequest.getValueAt(selectedRow, 5).toString().equalsIgnoreCase("completed"))){
            
            flag++;
            
        }
         if((tblDocRequest.getValueAt(selectedRow, 5).toString().equalsIgnoreCase("ClinicalTrail"))){            
            flag++;
            
        }
         System.out.println(flag+"clinical");
         if(flag==0)
         {
             JOptionPane.showMessageDialog(this, "Lab test results are yet returned");
             return;
             
         }
         
        requestTest.setStatus("ClinicalTrail");

        LabTrailDocWorkAreaJPanel labTrailJPanel = new LabTrailDocWorkAreaJPanel(userProcessContainer, requestTest);
        userProcessContainer.add("LabTrailDocWorkAreaJPanel", labTrailJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnclincalTrailActionPerformed

    private void GenderComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenderComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GenderComboBoxActionPerformed

    private void txtTestReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTestReqActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTestReqActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> GenderComboBox;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnRequestTest;
    private javax.swing.JButton btnViewResults;
    private javax.swing.JButton btnclincalTrail;
    private javax.swing.JLabel enterpriseLbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblGen;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblResults;
    private javax.swing.JLabel lblTest;
    private javax.swing.JButton refreshbtn;
    private javax.swing.JTable tblDocRequest;
    private javax.swing.JTextField txtAgeField;
    private javax.swing.JTextField txtNameField;
    private javax.swing.JTextField txtTestReq;
    private javax.swing.JLabel valueLbl;
    // End of variables declaration//GEN-END:variables
}
