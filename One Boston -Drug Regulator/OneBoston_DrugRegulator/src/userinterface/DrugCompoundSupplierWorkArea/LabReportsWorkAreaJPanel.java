package userinterface.DrugCompoundSupplierWorkArea;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import Business.Doctor.Patient;
import Business.DrugRegulator.DrugRegulator;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.DrugCompounds.DrugCompounds;
import Business.Network.Network;
import Business.Organization.DrugOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DrugWorkRequest;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.PharmaWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.LabWorkArea.LabRequestWorkAreaJPanel;

/**
 *
 * @author bhagyatrivedi
 */
public class LabReportsWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem es;
    private UserAccount userAccount;
    private DrugOrganization drugOrg;
    private Enterprise erp;
    private Network network;

    /**
     * Creates new form LabResultsJpanel
     */
    public LabReportsWorkAreaJPanel(JPanel userProcessContainer, UserAccount userAccount, Enterprise erp, DrugOrganization drugOrg, Network network,EcoSystem es) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.drugOrg = drugOrg;
        this.erp = erp;
        this.network = network;
        this.es = es;
        tblPopulateData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblWorkRequest = new javax.swing.JTable();
        btnGenerateDrug = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 204, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblWorkRequest.setBackground(new java.awt.Color(255, 255, 153));
        tblWorkRequest.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 20)); // NOI18N
        tblWorkRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Age", "Sex", "Message", "Sender"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblWorkRequest.setRowHeight(30);
        jScrollPane1.setViewportView(tblWorkRequest);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(57, 152, 900, 290));

        btnGenerateDrug.setFont(new java.awt.Font("SansSerif", 1, 20)); // NOI18N
        btnGenerateDrug.setText("Generate Drug");
        btnGenerateDrug.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateDrugActionPerformed(evt);
            }
        });
        add(btnGenerateDrug, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 470, 210, 40));

        btnBack.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 470, -1, 33));

        lblTitle.setFont(new java.awt.Font("SansSerif", 3, 24)); // NOI18N
        lblTitle.setText("Lab Results");
        add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 50, 160, 53));
    }// </editor-fold>//GEN-END:initComponents

    public void tblPopulateData() {
        DefaultTableModel dtm = (DefaultTableModel) tblWorkRequest.getModel();

        dtm.setRowCount(0);

        for (WorkRequest wrequest : drugOrg.getWorkQueue().getWorkRequestList()) {

            if (((DrugWorkRequest) wrequest).getPatient() != null) {
                Object[] row = new Object[7];
                row[0] = ((DrugWorkRequest) wrequest).getPatient();
                row[1] = ((DrugWorkRequest) wrequest).getPatient().getAge();
                row[2] = ((DrugWorkRequest) wrequest).getPatient().getSex();
                row[3] = ((DrugWorkRequest) wrequest).getPatient().getExaminationOfPatient();

                row[4] = wrequest.getSender().getEmployee().getName();
                               dtm.addRow(row);
            }
        }

    }

    private void btnGenerateDrugActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateDrugActionPerformed

        int index = tblWorkRequest.getSelectedRow();

         if (index < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        
        int check = 0;
        Patient patient = (Patient) tblWorkRequest.getValueAt(index, 0);
        if(patient.getDrugNewCompound()!=null)
        {
            JOptionPane.showMessageDialog(null, "Drug has been identified already");
        }
        
        List<String> patientDrug = new ArrayList<>();
        for (int i = 0; i < patient.getDrugHistory().getDrugCompoundHistory().size(); i++) {
            DrugCompounds g = patient.getDrugHistory().getDrugCompoundHistory().get(i);
            patientDrug.add(g.getDrugCompound());

        }
        Collections.sort(patientDrug);
        List<String> totaldrugGene = new ArrayList<>();
        for (DrugRegulator dr : es.getDrugList().getDrugList()) {
            List<String> drugcompound = new ArrayList<>();
            for (int i = 0; i < dr.getDrugCompoundList().getDrugCompoundHistory().size(); i++) {
                DrugCompounds dc = dr.getDrugCompoundList().getDrugCompoundHistory().get(i);
                drugcompound.add(dc.getDrugCompound());
                totaldrugGene.add(dc.getDrugCompound());
            }
            Collections.sort(drugcompound);

            if (drugcompound.equals(patientDrug)) {
                DrugReportsHistoryJPanel existingDrugResultsJpanel = new DrugReportsHistoryJPanel(userProcessContainer, userAccount, erp, drugOrg, network, dr);

                userProcessContainer.add("existingDrugResultsJpanel", existingDrugResultsJpanel);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
                check = 1;
            }

        }
        System.out.println(totaldrugGene.containsAll(patientDrug));
         if (!totaldrugGene.containsAll(patientDrug)) {
                DrugCompoundJPanel drugJpanel = new DrugCompoundJPanel(userProcessContainer, userAccount, erp, drugOrg, network);

                userProcessContainer.add("nonExistingGeneJpanel", drugJpanel);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
                check = 2;
            }
        

        if (check == 0) {
            CreateNewDrugWorkAreaJPanel generateDrugNewDrugJPanel = new CreateNewDrugWorkAreaJPanel(userProcessContainer, patient, drugOrg, userAccount, network,es);

            userProcessContainer.add("generateDrugNewDrugJPanel", generateDrugNewDrugJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }


    }//GEN-LAST:event_btnGenerateDrugActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component comp = componentArray[componentArray.length - 1];
        DrugCompoundSupplyWorkAreaJPanel dcswjp = (DrugCompoundSupplyWorkAreaJPanel) comp;
        dcswjp.tblPopulateData();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnGenerateDrug;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblWorkRequest;
    // End of variables declaration//GEN-END:variables
}
