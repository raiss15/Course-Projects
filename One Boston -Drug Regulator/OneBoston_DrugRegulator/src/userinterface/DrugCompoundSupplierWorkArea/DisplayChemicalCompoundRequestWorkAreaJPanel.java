package userinterface.DrugCompoundSupplierWorkArea;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import Business.BioChemicalCompoundInventory.BioChemicalCompoundInventory;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.MedicalInventory.MedicalInventory;
import Business.Network.Network;
import Business.Organization.DrugOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ChemicalWorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nisha
 */
public class DisplayChemicalCompoundRequestWorkAreaJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private EcoSystem es;
    private UserAccount userAccount;
    private DrugOrganization drugOrg ;
    private Enterprise erp;
    private Network network;

    /**
     * Creates new form ViewChemicalRequestsJPanel
     */
    public DisplayChemicalCompoundRequestWorkAreaJPanel(JPanel userProcessContainer,UserAccount userAccount,Enterprise erp, DrugOrganization drugOrg,Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.drugOrg = drugOrg;
        this.erp = erp;
        this.network = network;
        tblReorder();
    }
   
    public void tblReorder(){
        int rowCount = tblReorder.getRowCount();
        DefaultTableModel dtm = (DefaultTableModel)tblReorder.getModel();
        for(int i=rowCount-1;i>=0;i--) {
            dtm.removeRow(i);
        }
      for(BioChemicalCompoundInventory ci : drugOrg.getChemList()){
            Object row[] = new Object[6];
            row[0] = ci;
            row[1] = ci.getSerialNumber();
            row[2]= ci.getTotalAvailableQuantity();
            row[3]=ci.getTotalRequirement();
            row[4]= ci.getReorderingProgress();
            //row[5]=ci.getReorderStatus();
            dtm.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblReorder = new javax.swing.JTable();
        btnAddChemical = new javax.swing.JButton();
        btnViewRequests = new javax.swing.JButton();
        btnViewDetailsButton = new javax.swing.JButton();
        btnInventoryStatusCheck = new javax.swing.JButton();
        lblSerialNumber = new javax.swing.JLabel();
        txtSerialNumber = new javax.swing.JTextField();
        lblChemicalCompoundName = new javax.swing.JLabel();
        txtChemicalCompoundName = new javax.swing.JTextField();
        lblAvailableQuantity = new javax.swing.JLabel();
        txtAvailableQuantity = new javax.swing.JTextField();
        lblRequiredQuantity = new javax.swing.JLabel();
        txtRequiredQuantity = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 204, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblReorder.setBackground(new java.awt.Color(255, 255, 153));
        tblReorder.setBorder(new javax.swing.border.MatteBorder(null));
        tblReorder.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 20)); // NOI18N
        tblReorder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CHEMICAL COMPOUND NAME", "SERIAL NUMBER ", "AVAILABILE QUANTITY", "REQUIRED QUANTITY", "REORDER STATUS"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblReorder.setRowHeight(30);
        jScrollPane1.setViewportView(tblReorder);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 149, 950, 238));

        btnAddChemical.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        btnAddChemical.setText("ADD CHEMICAL COMPOUND");
        btnAddChemical.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddChemicalActionPerformed(evt);
            }
        });
        add(btnAddChemical, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 620, 390, -1));

        btnViewRequests.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        btnViewRequests.setText("VIEW REQUESTS");
        btnViewRequests.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewRequestsActionPerformed(evt);
            }
        });
        add(btnViewRequests, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 510, 251, -1));

        btnViewDetailsButton.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        btnViewDetailsButton.setText("VIEW DETAILS");
        btnViewDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailsButtonActionPerformed(evt);
            }
        });
        add(btnViewDetailsButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 550, 200, -1));

        btnInventoryStatusCheck.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        btnInventoryStatusCheck.setText("Check For Storage\n");
        btnInventoryStatusCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInventoryStatusCheckActionPerformed(evt);
            }
        });
        add(btnInventoryStatusCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 460, 321, -1));

        lblSerialNumber.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 24)); // NOI18N
        lblSerialNumber.setText("Serial Number:");
        add(lblSerialNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 410, -1, 20));

        txtSerialNumber.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 20)); // NOI18N
        add(txtSerialNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 399, 270, -1));

        lblChemicalCompoundName.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        lblChemicalCompoundName.setText("Chemical Compound Name:");
        add(lblChemicalCompoundName, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 450, -1, -1));

        txtChemicalCompoundName.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 20)); // NOI18N
        add(txtChemicalCompoundName, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 445, 270, -1));

        lblAvailableQuantity.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        lblAvailableQuantity.setText("Available Quantity:");
        add(lblAvailableQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 490, 240, 30));

        txtAvailableQuantity.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 20)); // NOI18N
        add(txtAvailableQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 492, 270, -1));

        lblRequiredQuantity.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        lblRequiredQuantity.setText("Required Quantity:");
        add(lblRequiredQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 540, 240, 20));

        txtRequiredQuantity.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 20)); // NOI18N
        txtRequiredQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRequiredQuantityActionPerformed(evt);
            }
        });
        add(txtRequiredQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 539, 270, -1));

        btnBack.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 24)); // NOI18N
        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 690, -1, -1));

        lblTitle.setFont(new java.awt.Font("SansSerif", 3, 24)); // NOI18N
        lblTitle.setText("Chemical Requests");
        add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, 250, 53));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddChemicalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddChemicalActionPerformed
        // TODO add your handling code here:

        BioChemicalCompoundInventory m=new BioChemicalCompoundInventory();
        String name=txtChemicalCompoundName.getText().trim();      
        if(name.isEmpty())
        {
         JOptionPane.showMessageDialog(null,"Chemical Name is empty");
            return;   
        }
        m.setBioChemCompound(txtChemicalCompoundName.getText());
        try
        {
        int availableQuantity= Integer.parseInt(txtAvailableQuantity.getText());
        m.setTotalAvailableQuantity(availableQuantity);
        }
        catch(NumberFormatException e)
        {
             JOptionPane.showMessageDialog(null,"available quantity must be a integer");
            return;   
        }
        try
        {
        int serialNumber= Integer.parseInt(txtSerialNumber.getText());
        m.setSerialNumber(serialNumber);
        }
         catch(NumberFormatException e)
        {
             JOptionPane.showMessageDialog(null,"Serial number  must be a integer");
            return;   
        }
        try{
        int requiredQuantity= Integer.parseInt(txtRequiredQuantity.getText());
        m.setTotalRequirement(requiredQuantity);
        }
         catch(NumberFormatException e){

            JOptionPane.showMessageDialog(null,"Required quantity must be integer!");
            return;
        }
        drugOrg.addChemical(m);
        m.setReorderingProgress("N");

        DefaultTableModel dtm =(DefaultTableModel) tblReorder.getModel();

        dtm.setRowCount(0);
        for(BioChemicalCompoundInventory ci : drugOrg.getChemList()){
            Object row[] = new Object[5];
            row[0] = ci;
            row[1] = ci.getSerialNumber();
            row[2]= ci.getTotalAvailableQuantity();
            row[3]=ci.getTotalRequirement();
            row[4]= ci.getReorderingProgress();
            dtm.addRow(row);
        }

        JOptionPane.showMessageDialog(null, "Chemical Added Successfully", "Warning", JOptionPane.INFORMATION_MESSAGE);
        txtSerialNumber.setText("");
        txtChemicalCompoundName.setText("");
        txtAvailableQuantity.setText("");
        txtRequiredQuantity.setText("");
        
    }//GEN-LAST:event_btnAddChemicalActionPerformed

    private void btnViewRequestsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewRequestsActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
       userProcessContainer.add("ViewRequestJPanel", new DisplayRequestsWorkAreaJPanel( userProcessContainer, userAccount, erp, drugOrg));
        layout.next(userProcessContainer);

    }//GEN-LAST:event_btnViewRequestsActionPerformed

    private void btnViewDetailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailsButtonActionPerformed
        // TODO add your handling code here:
        int row = tblReorder.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        BioChemicalCompoundInventory ci = (BioChemicalCompoundInventory)tblReorder.getValueAt(row, 0);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("UpdateEntryJPanel", new DisplayChemicalCompoundsDetailsJPanel(userProcessContainer, userAccount, erp,ci));
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnViewDetailsButtonActionPerformed

    private void btnInventoryStatusCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInventoryStatusCheckActionPerformed
        // TODO add your handling code here:
        int i=0;
        for(BioChemicalCompoundInventory ci : drugOrg.getChemList()){
            i++;
            
        }
        if(i<=0)
        {
            JOptionPane.showMessageDialog(null,"No chemicals are present for invetory check  ");
            return;
        }
      for(BioChemicalCompoundInventory ci : drugOrg.getChemList()){

            if(ci.getTotalAvailableQuantity()<=ci.getTotalRequirement()){
                if(!ci.getReorderingProgress().equals("Y")){
                    ChemicalWorkRequest request=new ChemicalWorkRequest();

                    ci.setReorderingProgress("Y");
                    request.setChemicalName(ci.getBioChemCompound());
                    request.setQuantity(ci.getTotalRequirement());
                    request.setSender(userAccount);

                    userAccount.getWorkQueue().getWorkRequestList().add(request);
                    for(Enterprise erp :network.getEnterpriseDirectory().getEnterpriseList() ){
                        System.out.println("***** Organization Name:" +erp.getName());
                        for(Organization organization:erp.getOrganizationDirectory().getOrganizationList()){
                            System.out.println("***** Organization Name:" +organization.getName());
                            if(organization.getName().equals("Chemical Organization")){
                                System.out.println("True");

                                System.out.println("***** organization Name"+organization.getName());

                                organization.getWorkQueue().getWorkRequestList().add(request);
                            }
                        }

                    }

                }

            }
        } 
        JOptionPane.showMessageDialog(null, "Inventory status checked and updated!", "Warning", JOptionPane.INFORMATION_MESSAGE);
       tblReorder();
    }//GEN-LAST:event_btnInventoryStatusCheckActionPerformed

    private void txtRequiredQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRequiredQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRequiredQuantityActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component comp = componentArray[componentArray.length - 1];
        DrugCompoundSupplyWorkAreaJPanel dcsjp = (DrugCompoundSupplyWorkAreaJPanel) comp;
        dcsjp.tblPopulateData();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddChemical;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnInventoryStatusCheck;
    private javax.swing.JButton btnViewDetailsButton;
    private javax.swing.JButton btnViewRequests;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAvailableQuantity;
    private javax.swing.JLabel lblChemicalCompoundName;
    private javax.swing.JLabel lblRequiredQuantity;
    private javax.swing.JLabel lblSerialNumber;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblReorder;
    private javax.swing.JTextField txtAvailableQuantity;
    private javax.swing.JTextField txtChemicalCompoundName;
    private javax.swing.JTextField txtRequiredQuantity;
    private javax.swing.JTextField txtSerialNumber;
    // End of variables declaration//GEN-END:variables
}
